"use strict";var precacheConfig=[["/alien/index.html","fc058d778ab0b500b5fdba49a126e50a"],["/alien/static/css/main.3ebd146a.css","5a643a86b91974b6ad674660d4b1067e"],["/alien/static/js/main.a4d53e86.js","f99338ea7f2856ea0fc83360b813cf7b"],["/alien/static/media/a.3cb98cf0.svg","3cb98cf00c001f2878f149c25d165689"],["/alien/static/media/b.d9a30f38.svg","d9a30f38fa77a3d28499aedebad6f345"],["/alien/static/media/back.0f78dc54.svg","0f78dc543fc9a6c8df0f5aaf6e47aba6"],["/alien/static/media/c.884c6a75.svg","884c6a75a79f8b895687154690b572e4"],["/alien/static/media/caret-error.ea7421ce.svg","ea7421ce3cdcc1980ad1b52433095b70"],["/alien/static/media/caret.c7cadedf.svg","c7cadedfda4823b48396b6717e6174d1"],["/alien/static/media/colon-error.59eafe95.svg","59eafe954adfda41cfda4f5d0da4a71e"],["/alien/static/media/colon.475dc951.svg","475dc951bf5683bb9189d0bb26f65f52"],["/alien/static/media/d.60df6f2b.svg","60df6f2bb9be7dd611381fc3fe48923f"],["/alien/static/media/dash-error.b6bccc14.svg","b6bccc148b1d77e3821363dc049f1a31"],["/alien/static/media/dash.85d4a24b.svg","85d4a24bc248a409bb56b504216cca41"],["/alien/static/media/diamond.6e36c4ec.svg","6e36c4ec84184e7cd2b68f076d5fabcf"],["/alien/static/media/dot-error.abcc215c.svg","abcc215c87b55e2e4bf6acbfdff042df"],["/alien/static/media/dot.153a31e9.svg","153a31e9f49cc57982a9b474281ae0cb"],["/alien/static/media/error.525a73b6.svg","525a73b666972953eff4f09bd6c127a7"],["/alien/static/media/help.c32d57c5.svg","c32d57c5a8af6d39dfaf496391b1e4ec"],["/alien/static/media/logo.56a3321b.svg","56a3321bf7dd3f640d5a7b11e727c7bf"],["/alien/static/media/test.755c6e2e.svg","755c6e2eadf59e57c49bba2dcbfb34c2"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),a=urlsToCacheKeys.has(t));var c="/alien/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(c,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});